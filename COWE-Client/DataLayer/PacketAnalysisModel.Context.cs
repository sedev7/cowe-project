//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COWE.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using DomainClasses;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PacketAnalysisEntity : DbContext
    {
        public PacketAnalysisEntity()
            : base("name=PacketAnalysisEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CapturePacket> CapturePackets { get; set; }
        public virtual DbSet<BatchInterval> BatchIntervals { get; set; }
        public virtual DbSet<CumulativeInterval> CumulativeIntervals { get; set; }
        public virtual DbSet<CaptureBatch> CaptureBatches { get; set; }
    
        public virtual int CaptureBatchInsert(string fileName, Nullable<bool> marked, Nullable<decimal> mean, Nullable<decimal> trimmedMean, ObjectParameter newCaptureBatchId)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var markedParameter = marked.HasValue ?
                new ObjectParameter("Marked", marked) :
                new ObjectParameter("Marked", typeof(bool));
    
            var meanParameter = mean.HasValue ?
                new ObjectParameter("Mean", mean) :
                new ObjectParameter("Mean", typeof(decimal));
    
            var trimmedMeanParameter = trimmedMean.HasValue ?
                new ObjectParameter("TrimmedMean", trimmedMean) :
                new ObjectParameter("TrimmedMean", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CaptureBatchInsert", fileNameParameter, markedParameter, meanParameter, trimmedMeanParameter, newCaptureBatchId);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CumulativeIntervalDelete(Nullable<bool> marked, ObjectParameter rowsDeleted)
        {
            var markedParameter = marked.HasValue ?
                new ObjectParameter("Marked", marked) :
                new ObjectParameter("Marked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CumulativeIntervalDelete", markedParameter, rowsDeleted);
        }
    }
}
